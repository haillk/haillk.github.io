<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go on Haillk-Blog</title>
    <link>https://haillk.github.io/categories/Go/</link>
    <description>Recent content in Go on Haillk-Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 06 Dec 2019 23:25:31 +0800</lastBuildDate>
    
	<atom:link href="https://haillk.github.io/categories/Go/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go Notes 4</title>
      <link>https://haillk.github.io/post/Go/Go-notes-4/</link>
      <pubDate>Fri, 06 Dec 2019 23:25:31 +0800</pubDate>
      
      <guid>https://haillk.github.io/post/Go/Go-notes-4/</guid>
      <description>1、recover必须隔一个函数帧栈才能捕获到 //错误 func main() { recover() panic(1) } //错误 func main() { defer recover() panic(1) } //正确 func main() { defer func() { recover() }() panic(1) } //错误 func main() { defer func() { defer func(){ recover() } }() panic(1) } 2、def</description>
    </item>
    
    <item>
      <title>Go Notes 3</title>
      <link>https://haillk.github.io/post/Go/Go-notes-3/</link>
      <pubDate>Sat, 30 Nov 2019 03:32:08 +0800</pubDate>
      
      <guid>https://haillk.github.io/post/Go/Go-notes-3/</guid>
      <description>&lt;p&gt;nil channel和已经关闭的channel,常量寻址，断言，cap,不能使用短变量声明设置结构体字段值，slice&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go Notes 2</title>
      <link>https://haillk.github.io/post/Go/Go-notes-2/</link>
      <pubDate>Fri, 29 Nov 2019 01:39:30 +0800</pubDate>
      
      <guid>https://haillk.github.io/post/Go/Go-notes-2/</guid>
      <description>&lt;p&gt;map中value是否可寻址的问题，数组的比较和切片的比较，存在全局变量和局部变量时，调用方法会读取全局变量，for range的次数和副本问题&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go Notes 1</title>
      <link>https://haillk.github.io/post/Go/Go-notes-1/</link>
      <pubDate>Fri, 29 Nov 2019 00:16:19 +0800</pubDate>
      
      <guid>https://haillk.github.io/post/Go/Go-notes-1/</guid>
      <description>&lt;p&gt;多重赋值，短变量声明，interface{}和interface{}指针，Slice 扩容，基于类型创建的方法&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ginv1.4(一)</title>
      <link>https://haillk.github.io/post/Go/Ginv1.4%E4%B8%80/</link>
      <pubDate>Fri, 29 Nov 2019 00:16:08 +0800</pubDate>
      
      <guid>https://haillk.github.io/post/Go/Ginv1.4%E4%B8%80/</guid>
      <description>&lt;p&gt;基础形式 ，参数获取&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>